create or replace PROCEDURE HRIS_LATE_LEAVE_DEDUCTION(
    P_MONTH_ID HRIS_MONTH_CODE.MONTH_ID%TYPE,
    P_DEDUCTION_DAY FLOAT,
    P_EMPLOYEE_ID HRIS_EMPLOYEES.EMPLOYEE_ID%TYPE)
AS
  V_MONTH_START_DATE HRIS_MONTH_CODE.FROM_DATE%TYPE;
  V_MONTH_END_DATE HRIS_MONTH_CODE.TO_DATE %TYPE;
  V_YEAR                                   NUMBER;
  V_MONTH_NO                               NUMBER;
  V_LEAVE_ID HRIS_LEAVE_MASTER_SETUP.LEAVE_ID%TYPE;
  V_ALREADY_DEDUCTED_FLAG CHAR(1 BYTE);
BEGIN
  SELECT FROM_DATE,
    TO_DATE,
    YEAR,
    MONTH_NO
  INTO V_MONTH_START_DATE,
    V_MONTH_END_DATE,
    V_YEAR,
    V_MONTH_NO
  FROM HRIS_MONTH_CODE
  WHERE MONTH_ID= P_MONTH_ID;
  --
  DELETE
  FROM HRIS_EMPLOYEE_PENALTY_DAYS
  WHERE TRUNC(ATTENDANCE_DT) BETWEEN V_MONTH_START_DATE AND V_MONTH_END_DATE;
  --
  SELECT (
    CASE
      WHEN COUNT(*) >0
      THEN 'Y'
      ELSE 'N'
    END)
  INTO V_ALREADY_DEDUCTED_FLAG
  FROM HRIS_PENALIZED_MONTHS
  WHERE YEAR                 =V_YEAR
  AND MONTH_NO               =V_MONTH_NO;
  IF V_ALREADY_DEDUCTED_FLAG ='Y' THEN
    UPDATE HRIS_PENALIZED_MONTHS
    SET NO_OF_DAYS  =P_DEDUCTION_DAY,
      MODIFIED_DATE =TRUNC(SYSDATE),
      MODIFIED_BY   = P_EMPLOYEE_ID
    WHERE YEAR      =V_YEAR
    AND MONTH_NO    =V_MONTH_NO;
  ELSE
    INSERT
    INTO HRIS_PENALIZED_MONTHS
      (
        YEAR,
        MONTH_NO,
        NO_OF_DAYS,
        CREATED_DATE,
        CREATED_BY
      )
      VALUES
      (
        V_YEAR,
        V_MONTH_NO,
        P_DEDUCTION_DAY,
        TRUNC(SYSDATE),
        P_EMPLOYEE_ID
      );
  END IF;
  --
  FOR attendance IN
  (SELECT         *
    FROM HRIS_ATTENDANCE_DETAIL
    WHERE (TRUNC(ATTENDANCE_DT) BETWEEN V_MONTH_START_DATE AND V_MONTH_END_DATE)
    AND OVERALL_STATUS IN ('BA','LA')
  )
  LOOP
    BEGIN
      SELECT LEAVE_ID
      INTO V_LEAVE_ID
      FROM
        (SELECT L.LEAVE_ID
        FROM HRIS_EMPLOYEE_LEAVE_ASSIGN LA
        JOIN HRIS_LEAVE_MASTER_SETUP L
        ON (LA.LEAVE_ID   =L.LEAVE_ID)
        WHERE EMPLOYEE_ID =attendance.EMPLOYEE_ID
        AND LA.BALANCE   >=P_DEDUCTION_DAY
        ORDER BY L.DEDUCTION_PRIORITY_NO
        )
      WHERE ROWNUM=1;
    EXCEPTION
    WHEN no_data_found THEN
      SELECT LEAVE_ID
      INTO V_LEAVE_ID
      FROM
        (SELECT L.LEAVE_ID
        FROM HRIS_EMPLOYEE_LEAVE_ASSIGN LA
        JOIN HRIS_LEAVE_MASTER_SETUP L
        ON (LA.LEAVE_ID   =L.LEAVE_ID)
        WHERE EMPLOYEE_ID =attendance.EMPLOYEE_ID
        ORDER BY L.DEDUCTION_PRIORITY_NO
        )
      WHERE ROWNUM=1;
    END;
    --
    INSERT
    INTO HRIS_EMPLOYEE_PENALTY_DAYS
      (
        EMPLOYEE_ID,
        ATTENDANCE_DT,
        LEAVE_ID,
        NO_OF_DAYS,
        REMARKS,
        CREATED_DATE
      )
      VALUES
      (
        attendance.EMPLOYEE_ID,
        attendance.ATTENDANCE_DT,
        V_LEAVE_ID,
        P_DEDUCTION_DAY,
        '4th day penalty',
        TRUNC(SYSDATE)
      );
  END LOOP;
END;