create or replace PROCEDURE HRIS_ATTENDANCE_JGI(
    P_ATTENDANCE_DT DATE )
AS
  V_START_TIME HRIS_SHIFTS.START_TIME%TYPE ;
  V_END_TIME HRIS_SHIFTS.END_TIME%TYPE ;
  V_GRACE_START_TIME HRIS_SHIFTS.GRACE_START_TIME%TYPE;
  V_GRACE_END_TIME HRIS_SHIFTS.GRACE_END_TIME%TYPE ;
  V_LATE_IN HRIS_SHIFTS.LATE_IN%TYPE;
  V_EARLY_OUT HRIS_SHIFTS.EARLY_OUT%TYPE;
  V_LATE_START_TIME TIMESTAMP;
  V_EARLY_END_TIME  TIMESTAMP;
  V_IN_TIME HRIS_ATTENDANCE_DETAIL.IN_TIME%TYPE;
  V_OUT_TIME HRIS_ATTENDANCE_DETAIL.OUT_TIME%TYPE;
  V_LATE_STATUS HRIS_ATTENDANCE_DETAIL.LATE_STATUS%TYPE:='N';
  V_LATE_COUNT          NUMBER                                  :=0;
  V_FORCE_ABSENT        NUMBER                                  :=0;
  V_FROM_DATE           DATE;
  V_TO_DATE             DATE;
  V_HAS_ATTENDANCE_DATA NUMBER:=0;
  V_EMPLOYEE_ID         NUMBER;
  CURSOR CUR_EMPLOYEE
  IS
    SELECT EMPLOYEE_ID
    FROM HRIS_EMPLOYEES
    WHERE STATUS    ='E'
    AND RETIRED_FLAG='N'
    AND IS_ADMIN    ='N';
BEGIN
  SELECT COUNT(*)
  INTO V_HAS_ATTENDANCE_DATA
  FROM HRIS_ATTENDANCE_DETAIL
  WHERE ATTENDANCE_DT      =P_ATTENDANCE_DT;
  IF V_HAS_ATTENDANCE_DATA =0 THEN
    CONTINUE;
  END IF;
  OPEN CUR_EMPLOYEE;
  LOOP
    FETCH CUR_EMPLOYEE INTO V_EMPLOYEE_ID;
    EXIT
  WHEN CUR_EMPLOYEE%NOTFOUND;
    BEGIN
      IF V_EMPLOYEE_ID =1000376 THEN
        DBMS_OUTPUT.PUT_LINE('TEST');
      END IF;
      BEGIN
        SELECT S.START_TIME ,
          S.END_TIME ,
          S.GRACE_START_TIME,
          S.GRACE_END_TIME ,
          S.LATE_IN,
          S.EARLY_OUT,
          S.START_TIME+(.000694*NVL(S.LATE_IN,0)),
          S.END_TIME  -(.000694*NVL(S.EARLY_OUT,0))
        INTO V_START_TIME,
          V_END_TIME,
          V_GRACE_START_TIME,
          V_GRACE_END_TIME,
          V_LATE_IN,
          V_EARLY_OUT,
          V_LATE_START_TIME,
          V_EARLY_END_TIME
        FROM HRIS_SHIFTS S
        JOIN HRIS_EMPLOYEE_SHIFT_ASSIGN SA
        ON (SA.SHIFT_ID     = S.SHIFT_ID)
        WHERE SA.EMPLOYEE_ID=V_EMPLOYEE_ID
        AND (P_ATTENDANCE_DT BETWEEN S.START_DATE AND S.END_DATE)
        AND S.CURRENT_SHIFT = 'Y'
        AND S.STATUS        = 'E'
        AND SA.STATUS       ='E'
        AND ROWNUM          <2;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        BEGIN
          SELECT S.START_TIME ,
            S.END_TIME ,
            S.GRACE_START_TIME,
            S.GRACE_END_TIME ,
            S.LATE_IN,
            S.EARLY_OUT,
            S.START_TIME+(.000694*NVL(S.LATE_IN,0)),
            S.END_TIME  -(.000694*NVL(S.EARLY_OUT,0))
          INTO V_START_TIME,
            V_END_TIME,
            V_GRACE_START_TIME,
            V_GRACE_END_TIME,
            V_LATE_IN,
            V_EARLY_OUT,
            V_LATE_START_TIME,
            V_EARLY_END_TIME
          FROM HRIS_SHIFTS S
          WHERE S.CURRENT_SHIFT='Y'
          AND S.DEFAULT_SHIFT  ='Y'
          AND S.STATUS         ='E'
          AND P_ATTENDANCE_DT BETWEEN S.START_DATE AND S.END_DATE;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          RAISE_APPLICATION_ERROR(-20344, 'No default and normal shift defined for this time period');
        END;
      END;
      BEGIN
        SELECT IN_TIME ,
          OUT_TIME
        INTO V_IN_TIME,
          V_OUT_TIME
        FROM HRIS_ATTENDANCE_DETAIL
        WHERE EMPLOYEE_ID = V_EMPLOYEE_ID
        AND ATTENDANCE_DT =TRUNC(P_ATTENDANCE_DT);
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20344,'NO DATA FOUND FOR EMPLOYEE => '|| V_EMPLOYEE_ID || 'ON DATE => '||P_ATTENDANCE_DT);
      END;
      IF V_IN_TIME IS NULL THEN
        CONTINUE;
      END IF;
      BEGIN
        SELECT FROM_DATE,
          TO_DATE
        INTO V_FROM_DATE,
          V_TO_DATE
        FROM HRIS_MONTH_CODE
        WHERE P_ATTENDANCE_DT BETWEEN FROM_DATE AND TO_DATE;
      EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20344, 'NO MONTH_CODE FOUND FOR THE DATE');
      END;
      SELECT COUNT(*)
      INTO V_LATE_COUNT
      FROM HRIS_ATTENDANCE_DETAIL
      WHERE EMPLOYEE_ID = V_EMPLOYEE_ID
      AND (ATTENDANCE_DT BETWEEN V_FROM_DATE AND V_TO_DATE )
      AND (LATE_STATUS                               != 'N');
      IF(V_GRACE_START_TIME-TRUNC(V_GRACE_START_TIME))<(V_IN_TIME-TRUNC(V_IN_TIME)) THEN
        CONTINUE;
      END IF;
      IF(V_GRACE_END_TIME-TRUNC(V_GRACE_END_TIME))>(V_OUT_TIME-TRUNC(V_OUT_TIME)) THEN
        CONTINUE;
      END IF;
      IF (V_LATE_START_TIME-TRUNC(V_LATE_START_TIME))<(V_IN_TIME-TRUNC(V_IN_TIME)) THEN
        V_LATE_STATUS                               :='L';
        IF V_LATE_COUNT                             >=2 THEN
          V_FORCE_ABSENT                            :=1;
        END IF;
      END IF;
      IF (V_EARLY_END_TIME-TRUNC(V_EARLY_END_TIME))>(V_OUT_TIME-TRUNC(V_OUT_TIME)) THEN
        V_LATE_STATUS                             :='E';
        IF V_LATE_COUNT                           >=2 THEN
          V_FORCE_ABSENT                          :=1;
        END IF;
      END IF;
      IF ((V_LATE_START_TIME-TRUNC(V_LATE_START_TIME))<(V_IN_TIME-TRUNC(V_IN_TIME))) AND ((V_EARLY_END_TIME-TRUNC(V_EARLY_END_TIME))>(V_OUT_TIME-TRUNC(V_OUT_TIME))) THEN
        V_LATE_STATUS                                :='B';
        V_FORCE_ABSENT                               :=1;
      END IF;
      IF V_LATE_STATUS != 'N' THEN
        UPDATE HRIS_ATTENDANCE_DETAIL
        SET LATE_STATUS   =V_LATE_STATUS
        WHERE EMPLOYEE_ID = V_EMPLOYEE_ID
        AND ATTENDANCE_DT =P_ATTENDANCE_DT;
      END IF;
      IF V_FORCE_ABSENT =1 THEN
        UPDATE HRIS_ATTENDANCE_DETAIL
        SET IN_TIME      =NULL,
          OUT_TIME       =NULL
        WHERE EMPLOYEE_ID=V_EMPLOYEE_ID
        AND ATTENDANCE_DT=P_ATTENDANCE_DT;
      END IF;
    END;
  END LOOP;
  CLOSE CUR_EMPLOYEE;
END;