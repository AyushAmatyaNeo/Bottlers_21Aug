CREATE OR REPLACE TRIGGER HRIS_BEFORE_LEAVE_REQUEST BEFORE
  UPDATE ON HRIS_EMPLOYEE_LEAVE_REQUEST FOR EACH ROW DECLARE V_BALANCE NUMBER(3,1);
  V_IS_MONTHLY HRIS_LEAVE_MASTER_SETUP.IS_MONTHLY%TYPE;
  V_FISCAL_YEAR_MONTH_NO HRIS_MONTH_CODE.FISCAL_YEAR_MONTH_NO%TYPE;
  BEGIN
    SELECT IS_MONTHLY
    INTO V_IS_MONTHLY
    FROM HRIS_LEAVE_MASTER_SETUP
    WHERE LEAVE_ID =:new.LEAVE_ID;
    --
    IF V_IS_MONTHLY = 'N' THEN
      IF(:new.HALF_DAY            IN ('F','S')) THEN
        V_BALANCE:= :new.NO_OF_DAYS/2;
      ELSE
        V_BALANCE:= :new.NO_OF_DAYS;
      END IF;
      IF :old.STATUS IN ('RQ','RC') AND :new.STATUS ='AP' THEN
        UPDATE HRIS_EMPLOYEE_LEAVE_ASSIGN
        SET BALANCE       = BALANCE -V_BALANCE
        WHERE EMPLOYEE_ID = :new.EMPLOYEE_ID
        AND LEAVE_ID      =:new.LEAVE_ID;
      ELSIF :old.STATUS   ='AP' AND :new.STATUS = 'C' THEN
        UPDATE HRIS_EMPLOYEE_LEAVE_ASSIGN
        SET BALANCE       = BALANCE +V_BALANCE
        WHERE EMPLOYEE_ID = :new.EMPLOYEE_ID
        AND LEAVE_ID      =:new.LEAVE_ID;
      END IF;
    END IF;
    --
    IF V_IS_MONTHLY = 'Y' THEN
      SELECT FISCAL_YEAR_MONTH_NO
      INTO V_FISCAL_YEAR_MONTH_NO
      FROM HRIS_MONTH_CODE
      WHERE TRUNC(:new.START_DATE) BETWEEN FROM_DATE AND TO_DATE;
      --
      V_BALANCE := :new.NO_OF_DAYS;
      --
      IF :old.STATUS IN ('RQ','RC') AND :new.STATUS ='AP' THEN
        UPDATE HRIS_EMPLOYEE_LEAVE_ASSIGN
        SET BALANCE              = BALANCE -V_BALANCE
        WHERE EMPLOYEE_ID        = :new.EMPLOYEE_ID
        AND LEAVE_ID             =:new.LEAVE_ID
        AND FISCAL_YEAR_MONTH_NO =V_FISCAL_YEAR_MONTH_NO;
      ELSIF :old.STATUS          ='AP' AND :new.STATUS = 'C' THEN
        UPDATE HRIS_EMPLOYEE_LEAVE_ASSIGN
        SET BALANCE              = BALANCE +V_BALANCE
        WHERE EMPLOYEE_ID        = :new.EMPLOYEE_ID
        AND LEAVE_ID             =:new.LEAVE_ID
        AND FISCAL_YEAR_MONTH_NO =V_FISCAL_YEAR_MONTH_NO;
      END IF;
      NULL ;
    END IF;
  END;