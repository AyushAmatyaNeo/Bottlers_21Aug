
-- FIRST LEVEL AUDIT TRIAL
ALTER TABLE HR_BRANCHES ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_BRANCHES ADD CONSTRAINT BRA_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_BRANCHES ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_BRANCHES ADD CONSTRAINT BRA_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 



ALTER TABLE HR_COMPANY ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_COMPANY ADD CONSTRAINT COM_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_COMPANY ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_COMPANY ADD CONSTRAINT COM_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_DEPARTMENTS ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_DEPARTMENTS ADD CONSTRAINT DEP_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_DEPARTMENTS ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_DEPARTMENTS ADD CONSTRAINT DEP_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 



ALTER TABLE HR_DESIGNATIONS ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_DESIGNATIONS ADD CONSTRAINT DES_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_DESIGNATIONS ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_DESIGNATIONS ADD CONSTRAINT DES_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_POSITIONS ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_POSITIONS ADD CONSTRAINT POS_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_POSITIONS ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_POSITIONS ADD CONSTRAINT POS_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_SERVICE_TYPES ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_SERVICE_TYPES ADD CONSTRAINT SER_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_SERVICE_TYPES ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_SERVICE_TYPES ADD CONSTRAINT SER_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_RECOMMENDER_APPROVER ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_RECOMMENDER_APPROVER ADD CONSTRAINT RECOMMAPPR_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_RECOMMENDER_APPROVER ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_RECOMMENDER_APPROVER ADD CONSTRAINT RECOMMAPPR_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_ACADEMIC_UNIVESITY ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_UNIVESITY ADD CONSTRAINT AUNI_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_ACADEMIC_UNIVESITY ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_UNIVESITY ADD CONSTRAINT AUNI_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_ACADEMIC_PROGRAMS ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_PROGRAMS ADD CONSTRAINT APRO_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_ACADEMIC_PROGRAMS ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_PROGRAMS ADD CONSTRAINT APRO_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_ACADEMIC_COURSES ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_COURSES ADD CONSTRAINT ACOUR_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_ACADEMIC_COURSES ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_COURSES ADD CONSTRAINT ACOUR_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_ACADEMIC_DEGREES ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_DEGREES ADD CONSTRAINT ADEGRE_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_ACADEMIC_DEGREES ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_ACADEMIC_DEGREES ADD CONSTRAINT ADEGRE_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_LEAVE_MASTER_SETUP ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_LEAVE_MASTER_SETUP ADD CONSTRAINT LEAVE_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_LEAVE_MASTER_SETUP ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_LEAVE_MASTER_SETUP ADD CONSTRAINT ALEAVE_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_EMPLOYEE_LEAVE_ASSIGN ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_EMPLOYEE_LEAVE_ASSIGN ADD CONSTRAINT EMPLEAVE_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_EMPLOYEE_LEAVE_ASSIGN ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_EMPLOYEE_LEAVE_ASSIGN ADD CONSTRAINT EMPLEAVE_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_HOLIDAY_MASTER_SETUP ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_HOLIDAY_MASTER_SETUP ADD CONSTRAINT HOLI_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_HOLIDAY_MASTER_SETUP ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_HOLIDAY_MASTER_SETUP ADD CONSTRAINT HOLI_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_SHIFTS ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_SHIFTS ADD CONSTRAINT SHIFTS_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_SHIFTS ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_SHIFTS ADD CONSTRAINT SHIFTS_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_EMPLOYEE_SHIFT_ASSIGN ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_EMPLOYEE_SHIFT_ASSIGN ADD CONSTRAINT EMPSHIFT_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_EMPLOYEE_SHIFT_ASSIGN ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_EMPLOYEE_SHIFT_ASSIGN ADD CONSTRAINT EMPSHIFT_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_JOB_HISTORY ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_JOB_HISTORY ADD CONSTRAINT JOBHIS_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_JOB_HISTORY ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_JOB_HISTORY ADD CONSTRAINT JOBHIS_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_JOB_HISTORY ADD CREATED_DT DATE

ALTER TABLE HR_JOB_HISTORY ADD MODIFIED_DT DATE


ALTER TABLE HR_ROLES ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_ROLES ADD CONSTRAINT ROLES_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_ROLES ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_ROLES ADD CONSTRAINT ROLES_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_USERS ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_USERS ADD CONSTRAINT USERS_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_USERS ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_USERS ADD CONSTRAINT USERS_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


ALTER TABLE HR_MENUS ADD CREATED_BY NUMBER(6,0)

ALTER TABLE HR_MENUS ADD CONSTRAINT MENUS_EMP_ID_FK FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 

ALTER TABLE HR_MENUS ADD MODIFIED_BY NUMBER(6,0)

ALTER TABLE HR_MENUS ADD CONSTRAINT MENUS_EMP_ID_FK2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID) 


-- END OF FIRST LEVEL AUDIT TRIAL

-- PROFILE PICTURE FK SET

ALTER TABLE HR_EMPLOYEES 
ADD CONSTRAINT FK_EMP_FILE_EMP_PRO_PIC_ID
FOREIGN KEY(PROFILE_PICTURE_ID) REFERENCES HR_EMPLOYEE_FILE(FILE_CODE);

UPDATE HR_EMPLOYEES SET PROFILE_PICTURE_ID=3;

-- END OF PICTURE FK SET

-- 
SELECT E.* FROM HR_EMPLOYEES E
        JOIN HR_EMPLOYEE_SHIFT_ASSIGN ESA ON (E.EMPLOYEE_ID=ESA.EMPLOYEE_ID) JOIN HR_SHIFTS S ON (ESA.SHIFT_ID=S.SHIFT_ID) 
        WHERE  
        (CASE
        WHEN  trim(TO_CHAR(SYSDATE, 'DY')) = 'SUN' THEN ( CASE WHEN (S.WEEKDAY1 = 'DAY_OFF') THEN 0 ELSE 1 END )
        WHEN  trim(TO_CHAR(SYSDATE, 'DY')) = 'MON' THEN ( CASE WHEN (S.WEEKDAY2 = 'DAY_OFF') THEN 0 ELSE 1 END )
        WHEN  trim(TO_CHAR(SYSDATE, 'DY')) = 'TUE' THEN ( CASE WHEN (S.WEEKDAY3 = 'DAY_OFF') THEN 0 ELSE 1 END )
        WHEN  trim(TO_CHAR(SYSDATE, 'DY')) = 'WED' THEN ( CASE WHEN (S.WEEKDAY4 = 'DAY_OFF') THEN 0 ELSE 1 END )
        WHEN  trim(TO_CHAR(SYSDATE, 'DY')) = 'THU' THEN ( CASE WHEN (S.WEEKDAY5 = 'DAY_OFF') THEN 0 ELSE 1 END )
        WHEN  trim(TO_CHAR(SYSDATE, 'DY')) = 'FRI' THEN ( CASE WHEN (S.WEEKDAY6 = 'DAY_OFF') THEN 0 ELSE 1 END )
        WHEN  trim(TO_CHAR(SYSDATE, 'DY')) = 'SAT' THEN ( CASE WHEN (S.WEEKDAY7 = 'DAY_OFF') THEN 0 ELSE 1 END )
        END)=1 AND E.STATUS='E' AND E.RETIRED_FLAG='N' AND E.JOIN_DATE <= SYSDATE; 
-- 
--  SALARY DETAIL TABLE ADDED
CREATE TABLE HR_SALARY_DETAIL
(
  EMPLOYEE_ID NUMBER(6,0) NOT NULL,  
  OLD_AMOUNT NUMBER(9,0) NOT NULL,
  NEW_AMOUNT NUMBER(9,0) NOT NULL,
  EFFECTIVE_DATE DATE,
  JOB_HISTORY_ID NUMBER(6,0),
  CREATED_BY NUMBER(6,0) NOT NULL,
  CREATED_DT DATE NOT NULL,
  MODIFIED_BY NUMBER(6,0),
  MODIFIED_DT DATE,
  STATUS CHAR(1 BYTE) NOT NULL CHECK(STATUS IN ('E','D'))
)


ALTER TABLE HR_SALARY_DETAIL 
ADD CONSTRAINT FK_SAL_DETL_EMP_EMPLOYEE_ID 
FOREIGN KEY(EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);


ALTER TABLE HR_SALARY_DETAIL
ADD CONSTRAINT FK_SAL_DET_EMP_CREATED_BY
FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_SALARY_DETAIL
ADD CONSTRAINT FK_SAL_DET_EMP_MODIFIED_BY
FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_SALARY_DETAIL
ADD CONSTRAINT FK_SAL_DET_JOB_HIS_J_H_ID
FOREIGN KEY (JOB_HISTORY_ID) REFERENCES HR_JOB_HISTORY(JOB_HISTORY_ID);
-- 
-- LOAN MASTER SETUP QUERY START
CREATE TABLE HR_LOAN_MASTER_SETUP(
  LOAN_ID           NUMBER(6,0) NOT NULL,
  LOAN_CODE         VARCHAR2(15 BYTE) NOT NULL,
  LOAN_NAME         VARCHAR2(255 BYTE) NOT NULL,
  MIN_AMOUNT        FLOAT(126) NOT NULL,
  MAX_AMOUNT        FLOAT(126) NOT NULL,
  INTEREST_RATE     FLOAT(126),
  REPAYMENT_AMOUNT  FLOAT(126),
  REPAYMENT_PERIOD  NUMBER(6,0),
  DEDUCT_ON_SALARY  CHAR(1 BYTE) NOT NULL,
  REMARKS           VARCHAR2(255 BYTE),
  STATUS            CHAR(1 BYTE) DEFAULT 'E' NOT NULL,
  CREATED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  CREATED_BY        NUMBER(6,0) NOT NULL,
  MODIFIED_DATE     DATE,
  MODIFIED_BY       NUMBER(6,0),
  CHECK ( STATUS IN ('D', 'E'))
);

ALTER TABLE HR_LOAN_MASTER_SETUP ADD CONSTRAINT LOAN_ID_PK PRIMARY KEY (LOAN_ID);
-- END OF LOAN MASTER SETUP QUERY

-- QUERY FOR LOAN PERMISSIONS SETUP START
CREATE TABLE HR_LOAN_PERMISSIONS(
  LOAN_ID           NUMBER(6,0) NOT NULL,
  PERMISSION_TYPE   VARCHAR2(255 BYTE) NOT NULL,
  VALUE             VARCHAR2(255 BYTE) NOT NULL,
  STATUS            CHAR(1 BYTE) DEFAULT 'E' NOT NULL,
  CREATED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  CREATED_BY        NUMBER(6,0) NOT NULL,
  MODIFIED_DATE     DATE,
  MODIFIED_BY       NUMBER(6,0),
  CHECK ( STATUS IN ('D', 'E'))
);

ALTER TABLE HR_LOAN_PERMISSIONS ADD CONSTRAINT PER_LOAN_ID_FK FOREIGN KEY (LOAN_ID)
REFERENCES HR_LOAN_MASTER_SETUP(LOAN_ID);

ALTER TABLE HR_LOAN_PERMISSIONS ADD PERMISSIONS_ID NUMBER(6,0) NOT NULL;

ALTER TABLE HR_LOAN_PERMISSIONS ADD CONSTRAINT PER_PERMISSION_ID_PK PRIMARY KEY (PERMISSIONS_ID);

-- END LOAN PERMISSION QUERY

-- START LOAN DETAIL HISTORY QUERY
CREATE TABLE HR_LOAN_DETAIL_HISTORY(
  HISTORY_ID        NUMBER(6,0) NOT NULL,
  EMPLOYEE_ID       NUMBER(6,0) NOT NULL,
  LOAN_ID           NUMBER(6,0) NOT NULL,
  RECEIVED_DATE     DATE NOT NULL,
  RECEIVED_AMOUNT   FLOAT(126) NOT NULL,
  FINAL_BALANCE     FLOAT(126) NOT NULL,
  TERMS             NUMBER(6,0) NOT NULL,
  RECEIVED_BY       NUMBER(6,0) NOT NULL,
  REMARKS           VARCHAR2(255 BYTE)
);
ALTER TABLE HR_LOAN_DETAIL_HISTORY ADD CONSTRAINT LOAN_HISTORY_ID_PK PRIMARY KEY(HISTORY_ID);

ALTER TABLE HR_LOAN_DETAIL_HISTORY ADD CONSTRAINT HISTORY_LOAN_ID_FK FOREIGN KEY (LOAN_ID)
REFERENCES HR_LOAN_MASTER_SETUP(LOAN_ID);

ALTER TABLE HR_LOAN_DETAIL_HISTORY ADD CONSTRAINT HISTORY_EMP_ID_FK FOREIGN KEY (EMPLOYEE_ID)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
-- END LOAN DETAIL HISTORY QUERY

-- START LOAN REQUEST QUERY
CREATE TABLE HR_EMPLOYEE_LOAN_REQUEST (
  LOAN_REQUEST_ID     NUMBER(6,0) NOT NULL,
  EMPLOYEE_ID         NUMBER(6,0) NOT NULL,
  LOAN_ID             NUMBER(6,0) NOT NULL,
  REQUESTED_AMOUNT    FLOAT(126) NOT NULL,
  REQUESTED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  LOAN_DATE           DATE NOT NULL,
  REASON              VARCHAR2(255 BYTE),
  STATUS              CHAR(2 BYTE) NOT NULL,
  APPROVED_AMOUNT     FLOAT(126),
  RECOMMENDED_BY      NUMBER(6,0),
  RECOMMENDED_DATE    DATE,
  RECOMMENDED_REMARKS VARCHAR2(255 BYTE),
  APPROVED_BY         NUMBER(6,0),
  APPROVED_DATE       DATE,
  APPROVED_REMARKS    VARCHAR2(255 BYTE)
);

ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST ADD CONSTRAINT RQ_LN_ID_PK PRIMARY KEY (LOAN_REQUEST_ID);

ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST ADD CONSTRAINT RQ_LN_EMP_FK FOREIGN KEY (EMPLOYEE_ID)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST ADD CONSTRAINT RQ_LN_LOAN_FK FOREIGN KEY (LOAN_ID)
REFERENCES HR_LOAN_MASTER_SETUP(LOAN_ID);

ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST ADD CONSTRAINT RQ_LN_APRV_BY_FK FOREIGN KEY(APPROVED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST ADD CONSTRAINT RQ_LN_RECMD_BY_FK FOREIGN KEY(RECOMMENDED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

-- END LOAN REQUEST QUERY


--START ADVCANCE MASTER SETUP
CREATE TABLE HR_ADVANCE_MASTER_SETUP (
  ADVANCE_ID            NUMBER(6,0) NOT NULL,
  ADVANCE_CODE          VARCHAR2(15 BYTE) NOT NULL,
  ADVANCE_NAME          VARCHAR2(255 BYTE) NOT NULL,
  MIN_SALARY_AMT        FLOAT(126) NOT NULL,
  MAX_SALARY_AMT        FLOAT(126) NOT NULL,
  AMOUNT_TO_ALLOW_PER   FLOAT(126) NOT NULL,
  MONTH_TO_ALLOW        NUMBER(6,0) NOT NULL,
  REMARKS               VARCHAR2(255),
  STATUS                CHAR(1 BYTE) NOT NULL,
  CREATED_BY            NUMBER(6,0) NOT NULL,
  CREATED_DATE          DATE DEFAULT SYSDATE NOT NULL,
  MODIFIED_BY           NUMBER(6,0),
  MODIFIED_DATE         DATE, 
  CHECK ( STATUS IN ('D', 'E'))
);
ALTER TABLE HR_ADVANCE_MASTER_SETUP ADD CONSTRAINT ADV_ID_PK PRIMARY KEY (ADVANCE_ID);

-- END ADVANCE MASTER SETUP


-- START ADVANCE REQUEST QUERY
CREATE TABLE HR_EMPLOYEE_ADVANCE_REQUEST (
  ADVANCE_REQUEST_ID     NUMBER(6,0) NOT NULL,
  EMPLOYEE_ID            NUMBER(6,0) NOT NULL,
  ADVANCE_ID             NUMBER(6,0) NOT NULL,
  REQUEST_AMOUNT         FLOAT(126) NOT NULL,
  TERMS                  NUMBER(6,0) NOT NULL,
  REQUESTED_DATE         DATE DEFAULT SYSDATE NOT NULL,
  ADVANCE_DATE           DATE,
  REASON                 VARCHAR2(255 BYTE),
  STATUS                 CHAR(2 BYTE) NOT NULL,
  APPROVED_AMOUNT        FLOAT(126),
  RECOMMENDED_BY         NUMBER(6,0),
  RECOMMENDED_DATE       DATE,
  RECOMMENDED_REMARKS    VARCHAR2(255),
  APPROVED_BY            NUMBER(6,0),
  APPROVED_DATE          DATE,
  APPROVED_REMARKS       VARCHAR2(255)
);

ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST ADD CONSTRAINT ADV_RQ_ID_PK PRIMARY KEY(ADVANCE_REQUEST_ID);

ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST ADD CONSTRAINT ADV_RQ_ADV_ID_FK FOREIGN KEY(ADVANCE_ID)
REFERENCES HR_ADVANCE_MASTER_SETUP(ADVANCE_ID);

ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST ADD CONSTRAINT ADV_RQ_EMP_ID_FK FOREIGN KEY(EMPLOYEE_ID)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST ADD CONSTRAINT RQ_ADV_APRV_BY_FK FOREIGN KEY(APPROVED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST ADD CONSTRAINT RQ_ADV_RECMD_BY_FK FOREIGN KEY(RECOMMENDED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

--END ADVANCE REQUEST QUERY

-- START INSTITUTE MASTER SETUP
CREATE TABLE HR_INSTITUTE_MASTER_SETUP(
  INSTITUTE_ID      NUMBER(6,0) NOT NULL,
  INSTITUTE_CODE    VARCHAR2(15 BYTE) NOT NULL,
  INSTITUTE_NAME    VARCHAR2(255 BYTE) NOT NULL,
  LOCATION          VARCHAR2(255 BYTE) NOT NULL,
  REMARKS           VARCHAR2(255 BYTE) NOT NULL,
  STATUS            CHAR(1 BYTE) NOT NULL,
  CREATED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  CREATED_BY        NUMBER(6,0) NOT NULL,
  MODIFIED_DATE     DATE,
  MODIFIED_BY       NUMBER(6,0),
  CHECK ( STATUS IN ('D', 'E'))
  );
ALTER TABLE HR_INSTITUTE_MASTER_SETUP ADD CONSTRAINT INST_ID_PK PRIMARY KEY(INSTITUTE_ID);

-- END INSTITUTE MASTER SETUP

-- START TRAINING MASTER SETUP 
CREATE TABLE HR_TRAINING_MASTER_SETUP (
  TRAINING_ID       NUMBER(6,0) NOT NULL,
  INSTITUTE_ID       NUMBER(6,0) NOT NULL,
  TRAINING_CODE     VARCHAR2(15 BYTE) NOT NULL,
  TRAINING_NAME     VARCHAR2(255 BYTE) NOT NULL,
  TRRAINING_TYPE    VARCHAR2(15 BYTE) NOT NULL,
  START_DATE        DATE NOT NULL,
  END_DATE          DATE NOT NULL,
  DURATION          NUMBER(6,0),
  INSTRUCTOR_NAME   VARCHAR2(255 BYTE) NOT NULL,
  REMARKS           VARCHAR2(255 BYTE),
  STATUS            CHAR(1 BYTE) NOT NULL,
  CREATED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  CREATED_BY        NUMBER(6,0) NOT NULL,
  MODIFIED_DATE     DATE,
  MODIFIED_BY       NUMBER(6,0),
  CHECK ( STATUS IN ('D', 'E'))
);
ALTER TABLE HR_TRAINING_MASTER_SETUP ADD CONSTRAINT TRAIN_ID_PK PRIMARY KEY(TRAINING_ID);

ALTER TABLE HR_TRAINING_MASTER_SETUP ADD CONSTRAINT TRAIN_INST_ID_FK FOREIGN KEY(INSTITUTE_ID) 
REFERENCES HR_INSTITUTE_MASTER_SETUP(INSTITUTE_ID);

-- END TRAINING MASTER SETUP

-- START EMPLOYEE TRAINING ASSIGN 
CREATE TABLE HR_EMPLOYEE_TRAINING_ASSIGN (
  TRAINING_ID         NUMBER(6,0) NOT NULL,
  EMPLOYEE_ID         NUMBER(6,0) NOT NULL,
  REMARKS             VARCHAR2(255 BYTE),
  STATUS              CHAR(1 BYTE) NOT NULL,
  CREATED_DATE        DATE DEFAULT SYSDATE NOT NULL,
  CREATED_BY          NUMBER(6,0) NOT NULL,
  MODIFIED_DATE       DATE,
  MODIFIED_BY         NUMBER(6,0)
);

ALTER TABLE HR_EMPLOYEE_TRAINING_ASSIGN ADD CONSTRAINT TRAIN_EMP_ID_FK FOREIGN KEY(EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_TRAINING_ASSIGN ADD CONSTRAINT TRAIN_TRAINING_ID_FK 
FOREIGN KEY (TRAINING_ID) REFERENCES HR_TRAINING_MASTER_SETUP(TRAINING_ID);
-- END EMPLOYEE TRAINING ASSIGN


-- START EMPLOYEE TRAVEL REQUEST
CREATE TABLE HR_EMPLOYEE_TRAVEL_REQUEST(
  TRAVEL_ID           NUMBER(6,0) NOT NULL,
  EMPLOYEE_ID         NUMBER(6,0) NOT NULL,
  REQUESTED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  FROM_DATE           DATE NOT NULL,
  TO_DATE             DATE NOT NULL,
  DESTINATION         VARCHAR2(255 BYTE) NOT NULL,
  PURPOSE             VARCHAR2(255 BYTE),
  REQUESTED_TYPE      VARCHAR2(15 BYTE) NOT NULL,
  REQUESTED_AMOUNT    FLOAT(126) NOT NULL,
  REMARKS             VARCHAR2(255),
  STATUS              CHAR(2 BYTE) NOT NULL,
  APPROVED_AMOUNT     FLOAT(125),
  RECOMMENDED_BY      NUMBER(6,0),
  RECOMMENDED_DATE    DATE,
  RECOMMENDED_REMARKS VARCHAR2(255 BYTE),
  APPROVED_BY         NUMBER(6,0),
  APPROVED_DATE       DATE,
  APPROVED_REMARKS    VARCHAR2(255 BYTE)
);

ALTER TABLE HR_EMPLOYEE_TRAVEL_REQUEST ADD CONSTRAINT EMP_TRAVEL_ID_PK PRIMARY KEY(TRAVEL_ID);

ALTER TABLE HR_EMPLOYEE_TRAVEL_REQUEST ADD CONSTRAINT EMP_TRAVEL_EMP_ID_FK FOREIGN KEY(EMPLOYEE_ID)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_TRAVEL_REQUEST ADD CONSTRAINT RQ_TRVL_APRV_BY_FK FOREIGN KEY(APPROVED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_TRAVEL_REQUEST ADD CONSTRAINT RQ_TRVL_RECMD_BY_FK FOREIGN KEY(RECOMMENDED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
-- END EMPLOYEE TRAVEL REQUEST

-- DROP COLUMN OF LOAN MASTER SETUP [2 Jan 2017]
ALTER TABLE HR_LOAN_MASTER_SETUP 
DROP COLUMN DEDUCT_ON_SALARY;
-- END DROP QUERY

-- ADD COLUMN ON LOAN REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST 
ADD DEDUCT_ON_SALARY CHAR(1 BYTE);
-- END 

-- RENAME COLUMN OF ADVANCE MASTER SETUP 
ALTER TABLE HR_ADVANCE_MASTER_SETUP
RENAME COLUMN AMOUNT_TO_ALLOW_PER TO AMOUNT_TO_ALLOW
-- END

-- ADD TWO COLUMN ON INSTITUTE MASTER SETUP
ALTER TABLE HR_INSTITUTE_MASTER_SETUP
ADD (TELEPHONE VARCHAR2(255 BYTE),EMAIL VARCHAR2(255 BYTE));
--END

-- RENAME COLUMN OF TRAINING TABLE
ALTER TABLE HR_TRAINING_MASTER_SETUP
RENAME COLUMN TRRAINING_TYPE TO TRAINING_TYPE;
-- END


-- RENAME TABLE NAME 
RENAME HR_LOAN_PERMISSIONS TO HR_LOAN_RESTRICTIONS
-- END

-- RENAME COLUMN OF LOAN RESTRICTIONS TABLE
ALTER TABLE HR_LOAN_RESTRICTIONS
RENAME COLUMN PERMISSION_TYPE TO RESTRICTION_TYPE

ALTER TABLE HR_LOAN_RESTRICTIONS
RENAME COLUMN PERMISSIONS_ID TO RESTRICTION_ID

ALTER TABLE HR_LOAN_RESTRICTIONS
MODIFY VALUE VARCHAR2(255 BYTE) NULL
-- END

-- MODIFY DATA TYPE OF STATUS ON LOAN REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST
MODIFY STATUS VARCHAR2(2 BYTE)
-- END

-- DROP COLUMN APPROVED AMOUNT OF LOAN REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_LOAN_REQUEST 
DROP COLUMN APPROVED_AMOUNT;
--END

-- DROP COLUMN APPROVED AMOUNT OF ADVANCE REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST 
DROP COLUMN APPROVED_AMOUNT;
-- END

-- RENAME COLUMN OF ADVANCE REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST
RENAME COLUMN REQUEST_AMOUNT TO REQUESTED_AMOUNT
-- END

-- MODIFY DATA TYPE OF STATUS ON ADVANCE REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST
MODIFY STATUS VARCHAR2(2 BYTE)
-- END

-- DROP COLUMN APPROVED AMOUNT OF TRAVEL REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_ADVANCE_REQUEST 
DROP COLUMN APPROVED_AMOUNT;
-- END

-- NOTIFICATION TABLE ADDED
CREATE TABLE HR_NOTIFICATION (
MESSAGE_ID NUMBER(7,0) PRIMARY KEY,
MESSAGE_DATETIME DATE NOT NULL,
MESSAGE_TITLE VARCHAR2(500 BYTE) NOT NULL,
MESSAGE_DESC VARCHAR2(1000 BYTE),
MESSAGE_FROM NUMBER(7,0) NOT NULL,
MESSAGE_TO NUMBER(7,0) NOT NULL,
STATUS CHAR(1 BYTE) NOT NULL,
EXPIRY_TIME DATE
)

ALTER TABLE HR_NOTIFICATION 
ADD CONSTRAINT FK_NOTI_EMP_MSG_FROM
FOREIGN KEY(MESSAGE_FROM) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)

ALTER TABLE HR_NOTIFICATION 
ADD CONSTRAINT FK_NOTI_EMP_MSG_TO 
FOREIGN KEY(MESSAGE_TO) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)

ALTER TABLE HR_NOTIFICATION
ADD CONSTRAINT CHK_NOTI_STATUS 
CHECK(STATUS IN ('U','S'))
-- END NOTIFICATION TABLE ADDED

-- MODIFY DATA TYPE OF REQUESTED_TYPE ON TRAVEL REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_TRAVEL_REQUEST
MODIFY REQUESTED_TYPE CHAR(2 BYTE);

ALTER TABLE HR_EMPLOYEE_TRAVEL_REQUEST
MODIFY STATUS VARCHAR2(2 BYTE)
-- END

-- HR_EMAIL_TEMPLATE CREATE SCRIPT
CREATE TABLE HR_EMAIL_TEMPLATE
(ID NUMBER(2,0) PRIMARY KEY,
SUBJECT VARCHAR2(500 BYTE) NOT NULL,
DESCRIPTION VARCHAR2(4000 BYTE) NOT NULL,
CREATED_BY NUMBER(6,0) NOT NULL,
CREATED_DT DATE NOT NULL,
MODIFIED_BY NUMBER(6,0),
MODIFIED_DT DATE
)

ALTER TABLE HR_EMAIL_TEMPLATE
ADD CONSTRAINT FK_EMAIL_TEMP_EMP_CREATED_BY
FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)

ALTER TABLE HR_EMAIL_TEMPLATE
ADD CONSTRAINT FK_EMAIL_TEMP_EMP_MODIFIED_BY
FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)

--END OF  HR_EMAIL_TEMPLATE CREATE SCRIPT

-- ADD COLUMN ON LEAVE REQUEST TABLE
ALTER TABLE HR_EMPLOYEE_LEAVE_REQUEST
ADD (MODIFIED_DT DATE);
--END

-- USER_SETTING CREATE SCRIPT

CREATE TABLE HR_USER_SETTING
  (
    USER_ID             NUMBER(6,0),
    ENABLE_NOTIFICATION CHAR(1 BYTE) DEFAULT 'Y' NOT NULL CHECK(ENABLE_NOTIFICATION IN ('Y','N')) ,
    ENABLE_EMAIL        CHAR(1 BYTE) DEFAULT 'Y' NOT NULL CHECK(ENABLE_EMAIL        IN ('Y','N'))
  );
  
  
ALTER TABLE HR_USER_SETTING ADD CONSTRAINT FK_SETTING_USER_USER_ID FOREIGN KEY(USER_ID) REFERENCES HR_USERS(USER_ID);
CREATE OR REPLACE TRIGGER USER_SETTING_TRIGGER AFTER
  INSERT ON HR_USERS FOR EACH ROW BEGIN
  INSERT INTO HR_USER_SETTING
    (USER_ID
    ) VALUES
    (:new.USER_ID
    );
END;


--END OF  USER_SETTING CREATE SCRIPT

-- SCRIPT FOR HR_EMPLOYEE_WORK_HOLIDAY
CREATE TABLE HR_EMPLOYEE_WORK_HOLIDAY(
  ID                  NUMBER(6,0) NOT NULL,
  EMPLOYEE_ID         NUMBER(6,0) NOT NULL,
  HOLIDAY_ID          NUMBER(6,0) NOT NULL,
  REQUESTED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  FROM_DATE           DATE NOT NULL,
  TO_DATE             DATE NOT NULL,
  DURATION            NUMBER(6,0) NOT NULL,
  DESCRIPTION         VARCHAR2(255 BYTE),
  REMARKS             VARCHAR2(255),
  STATUS              CHAR(2 BYTE) NOT NULL,
  RECOMMENDED_BY      NUMBER(6,0),
  RECOMMENDED_DATE    DATE,
  RECOMMENDED_REMARKS VARCHAR2(255 BYTE),
  APPROVED_BY         NUMBER(6,0),
  APPROVED_DATE       DATE,
  APPROVED_REMARKS    VARCHAR2(255 BYTE)
);

ALTER TABLE HR_EMPLOYEE_WORK_HOLIDAY ADD CONSTRAINT EMP_WK_HOLIDAY_ID_PK PRIMARY KEY(ID);

ALTER TABLE HR_EMPLOYEE_WORK_HOLIDAY ADD CONSTRAINT EMP_WK_HOLIDAY_EMP_ID_FK FOREIGN KEY(EMPLOYEE_ID)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_WORK_HOLIDAY ADD CONSTRAINT RQ_WK_HOLIDAY_APRV_BY_FK FOREIGN KEY(APPROVED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_WORK_HOLIDAY ADD CONSTRAINT RQ_WK_HOLIDAY_RECMD_BY_FK FOREIGN KEY(RECOMMENDED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
-- END SCRIPT OF HR_EMPLOYEE_WORK_HOLIDAY TABLE

-- START SCRIPT FOR HR_EMPLOYEE_WORK_DAYOFF TABLE
CREATE TABLE HR_EMPLOYEE_WORK_DAYOFF(
  ID                  NUMBER(6,0) NOT NULL,
  EMPLOYEE_ID         NUMBER(6,0) NOT NULL,
  REQUESTED_DATE      DATE DEFAULT SYSDATE NOT NULL,
  FROM_DATE           DATE NOT NULL,
  TO_DATE             DATE NOT NULL,
  DURATION            NUMBER(6,0) NOT NULL,
  REMARKS             VARCHAR2(255),
  STATUS              CHAR(2 BYTE) NOT NULL,
  RECOMMENDED_BY      NUMBER(6,0),
  RECOMMENDED_DATE    DATE,
  RECOMMENDED_REMARKS VARCHAR2(255 BYTE),
  APPROVED_BY         NUMBER(6,0),
  APPROVED_DATE       DATE,
  APPROVED_REMARKS    VARCHAR2(255 BYTE)
);

ALTER TABLE HR_EMPLOYEE_WORK_DAYOFF ADD CONSTRAINT EMP_WK_DAYOFF_ID_PK PRIMARY KEY(ID);

ALTER TABLE HR_EMPLOYEE_WORK_DAYOFF ADD CONSTRAINT EMP_WK_DAYOFF_EMP_ID_FK FOREIGN KEY(EMPLOYEE_ID)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_WORK_DAYOFF ADD CONSTRAINT RQ_WK_DAYOFF_APRV_BY_FK FOREIGN KEY(APPROVED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_WORK_DAYOFF ADD CONSTRAINT RQ_WK_DAYOFF_RECMD_BY_FK FOREIGN KEY(RECOMMENDED_BY)
REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
-- END SCRIPT OF HR_EMPLOYEE_WORK_DAYOFF TABLE


-- MODIFY COLUMN OF HR_EMPLOYEE_WORK_HOLIDAY
ALTER TABLE HR_EMPLOYEE_WORK_HOLIDAY 
DROP COLUMN DESCRIPTION;

ALTER TABLE HR_EMPLOYEE_WORK_HOLIDAY
ADD (MODIFIED_DATE DATE);
-- END

ALTER TABLE HR_EMPLOYEE_WORK_DAYOFF
ADD (MODIFIED_DATE DATE);


ALTER TABLE HR_EMPLOYEE_WORK_DAYOFF
MODIFY STATUS VARCHAR2(2 BYTE)

ALTER TABLE HR_EMPLOYEE_WORK_HOLIDAY
MODIFY STATUS VARCHAR2(2 BYTE)


-- alter table hr_attendance_detail
ALTER TABLE HR_ATTENDANCE_DETAIL 
ADD TRAVEL_ID NUMBER(6,0) 
-- end of alter table hr_attendance_detail
-- alter table hr_employee_training_assign
ALTER TABLE HR_EMPLOYEE_TRAINING_ASSIGN 
ADD CONSTRAINT CK_EMP_TRA_ASS_STATUS
CHECK( STATUS IN ('E','D'));
-- end of alter table hr_employee_training_assign
--ADD COLUMN NAMED AS IS_SUBSTITUTE ON LEAVE MASTER SETUP
ALTER TABLE HR_LEAVE_MASTER_SETUP
ADD (IS_SUBSTITUTE CHAR(1 BYTE) DEFAULT 'N', 
CHECK (IS_SUBSTITUTE IN('Y','N')));
-- END

-- RETITED FLAG ALTER SCRIPT
ALTER TABLE HR_EMPLOYEES ADD CONSTRAINT RETIRED_FLAG_CHECK 
CHECK(RETIRED_FLAG IN ('Y','N'));
-- END OF RETITED FLAG ALTER SCRIPT




ALTER TABLE HR_ADVANCE_MASTER_SETUP ADD CONSTRAINT FK_ADVANCE_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_ADVANCE_MASTER_SETUP ADD CONSTRAINT FK_ADVANCE_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_ATTENDANCE ADD CONSTRAINT FK_ATTENDACE_EMPLOYEE_EMP_ID FOREIGN KEY(EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);


ALTER TABLE HR_ATTENDANCE_DETAIL ADD CONSTRAINT FK_ATD_DTL_EMPLOYEE_EMP_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_ATTENDANCE_DETAIL ADD CONSTRAINT FK_ATD_DTL_LEAVE_LEAVE_ID FOREIGN KEY (LEAVE_ID) REFERENCES HR_LEAVE_MASTER_SETUP(LEAVE_ID);

ALTER TABLE HR_ATTENDANCE_DETAIL ADD CONSTRAINT FK_ATD_DTL_TRAVEL_TRAVEL_ID FOREIGN KEY(TRAVEL_ID) REFERENCES HR_EMPLOYEE_TRAVEL_REQUEST(TRAVEL_ID);

ALTER TABLE HR_ATTENDANCE_DETAIL ADD CONSTRAINT FK_ATD_DTL_HOLIDAY_HOLIDAY_ID FOREIGN KEY(HOLIDAY_ID) REFERENCES HR_HOLIDAY_MASTER_SETUP(HOLIDAY_ID);

ALTER TABLE HR_ATTENDANCE_DETAIL ADD CONSTRAINT FK_ATD_DTL_TRAINING_TRNG_ID FOREIGN KEY(TRAINING_ID) REFERENCES HR_TRAINING_MASTER_SETUP(TRAINING_ID);


ALTER TABLE HR_ATTENDANCE_REQUEST ADD CONSTRAINT FK_ATD_REQ_EMPLOYEE_EMP_ID FOREIGN KEY(EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE HR_ATTENDANCE_REQUEST ADD CONSTRAINT FK_ATD_REQ_EMPLOYEE_EMP_ID2 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);


ALTER TABLE HR_EMPLOYEE_FILE RENAME CONSTRAINT SYS_C00213193 TO FK_EMP_FILE_EMPLOYEE_EMP_ID;


ALTER TABLE HR_EMPLOYEE_TRAINING_ASSIGN ADD CONSTRAINT FK_TRAING_AGN_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_EMPLOYEE_TRAINING_ASSIGN ADD CONSTRAINT FK_TRAING_AGN_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);


ALTER TABLE HR_INSTITUTE_MASTER_SETUP ADD CONSTRAINT FK_INSTITUTE_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_INSTITUTE_MASTER_SETUP ADD CONSTRAINT FK_INSTITUTE_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);


ALTER TABLE HR_LOAN_MASTER_SETUP ADD CONSTRAINT FK_LOAN_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE HR_LOAN_MASTER_SETUP ADD CONSTRAINT FK_LOAN_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_LOAN_RESTRICTIONS ADD CONSTRAINT FK_LOAN_RTN_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE HR_LOAN_RESTRICTIONS ADD CONSTRAINT FK_LOAN_RTN_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);


ALTER TABLE HR_PAY_SETUP ADD CONSTRAINT FK_PAY_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE HR_PAY_SETUP ADD CONSTRAINT FK_PAY_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_RECOMMENDER_APPROVER ADD CONSTRAINT FK_RECOM_APPRV_EMPLOYEE_EMP_ID FOREIGN KEY(EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE HR_RECOMMENDER_APPROVER ADD CONSTRAINT FK_RECOM_APRV_EMPLOYEE_EMP_ID2 FOREIGN KEY(RECOMMEND_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE HR_RECOMMENDER_APPROVER ADD CONSTRAINT FK_RECOM_APRV_EMPLOYEE_EMP_ID3 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE HR_TRAINING_MASTER_SETUP ADD CONSTRAINT FK_TRAINING_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);
ALTER TABLE HR_TRAINING_MASTER_SETUP ADD CONSTRAINT FK_TRAINING_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID);


-- create table for appraisal detail
CREATE TABLE HR_APPRAISAL_TYPE
(
	APPRAISAL_TYPE_ID					NUMBER(7,0) NOT NULL,	
	APPRAISAL_TYPE_CODE	      VARCHAR2(15 BYTE) NOT NULL,	
	SERVICE_TYPE_ID						NUMBER(7,0),
	APPRAISAL_TYPE_EDESC      VARCHAR2(100 BYTE) NOT NULL,
	APPRAISAL_TYPE_NDESC      VARCHAR2(400 BYTE) DEFAULT NULL, 
	COMPANY_ID          			NUMBER(7,0),	
	BRANCH_ID           			NUMBER(7,0),
	CREATED_BY            		NUMBER(7,0),
	CREATED_DATE          		DATE DEFAULT SYSDATE,
	MODIFIED_BY					      NUMBER(7,0),
	MODIFIED_DATE				      DATE,
	CHECKED								    VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY							  NUMBER(7,0),
	APPROVED_DATE						  DATE DEFAULT SYSDATE,
	APPROVED							    VARCHAR2(1 BYTE) DEFAULT 'N',
	STATUS        						CHAR(1 BYTE),
	CONSTRAINT FK_APL_TYPE_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_TYPE_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT PK_APL_TYPE PRIMARY KEY (APPRAISAL_TYPE_ID),
	CONSTRAINT FK_APL_TYPE FOREIGN KEY (SERVICE_TYPE_ID) REFERENCES HR_SERVICE_TYPES(SERVICE_TYPE_ID),
	CONSTRAINT FK_APL_TYPE_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_TYPE_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_TYPE_EMPLOYEE_EMP_ID3 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)	
);



CREATE TABLE HR_APPRAISAL_STAGE
(		
	STAGE_ID				NUMBER(7,0) NOT NULL,	
	STAGE_CODE      VARCHAR2(15 BYTE) NOT NULL,
	STAGE_EDESC     VARCHAR2(100 BYTE) NOT NULL,
	STAGE_NDESC     VARCHAR2(400 BYTE) DEFAULT NULL,
	START_DATE      DATE  DEFAULT NULL,
	END_DATE		    DATE  DEFAULT NULL,
	ORDER_NO				NUMBER(7,0),
	COMPANY_ID      NUMBER(7,0),	
	BRANCH_ID       NUMBER(7,0),
	CREATED_BY      NUMBER(7,0),
	CREATED_DATE    DATE DEFAULT SYSDATE,
	MODIFIED_BY		  NUMBER(7,0),
	MODIFIED_DATE		DATE,
	CHECKED					VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY			NUMBER(7,0),
	APPROVED_DATE		DATE DEFAULT SYSDATE,
	APPROVED				VARCHAR2(1 BYTE) DEFAULT 'N',
	STATUS        	CHAR(1 BYTE),
	CONSTRAINT FK_APL_STG_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_STG_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT PK_APL_STAGE PRIMARY KEY (STAGE_ID),
	CONSTRAINT FK_APL_STG_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES 	HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_STG_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_STG_EMPLOYEE_EMP_ID3 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)
);



CREATE TABLE HR_APPRAISAL_HEADING
(
	HEADING_ID				      NUMBER(7,0) NOT NULL,	
	HEADING_CODE            VARCHAR2(15 BYTE) NOT NULL,
	APPRAISAL_TYPE_ID		    NUMBER(7,0) NOT NULL,
	PERCENTAGE				      NUMBER(5,2) DEFAULT 0,
	HEADING_EDESC           VARCHAR2(400 BYTE) NOT NULL,
	HEADING_NDESC           VARCHAR2(800 BYTE) DEFAULT NULL, 
	COMPANY_ID          	  NUMBER(7,0),	
	BRANCH_ID           	  NUMBER(7,0),
	CREATED_BY            	NUMBER(7,0),
	CREATED_DATE          	DATE DEFAULT SYSDATE,
	MODIFIED_BY		          NUMBER(7,0),
	MODIFIED_DATE		        DATE,
	CHECKED					        VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY				      NUMBER(7,0),
	APPROVED_DATE			      DATE DEFAULT SYSDATE,
	APPROVED				        VARCHAR2(1 BYTE) DEFAULT 'N',
	STATUS        			    CHAR(1 BYTE),
	CONSTRAINT FK_APL_HDG_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_HDG_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT PK_APL_HEADING PRIMARY KEY (HEADING_ID),
	CONSTRAINT FK_APL_HEADING FOREIGN KEY (APPRAISAL_TYPE_ID) REFERENCES HR_APPRAISAL_TYPE(APPRAISAL_TYPE_ID),
        CONSTRAINT FK_APL_HDG_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES 	HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_HDG_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_HDG_EMPLOYEE_EMP_ID3 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)
);



CREATE TABLE HR_APPRAISAL_QUESTION
(
	QUESTION_ID				    NUMBER(7,0) NOT NULL,	
	QUESTION_CODE       	VARCHAR2(15 BYTE) NOT NULL,
	HEADING_ID				    NUMBER(7,0) NOT NULL,
	QUESTION_EDESC      	VARCHAR2(400 BYTE) NOT NULL,
	QUESTION_NDESC      	VARCHAR2(800 BYTE) DEFAULT NULL, 
	ANSWER_TYPE				    VARCHAR2(30 BYTE) CHECK(ANSWER_TYPE IN ('TEXT','NUMBER','PERCENTAGE','CHECKBOX','RADIO')), 
	APPRAISEE_FLAG      	VARCHAR2(1 BYTE),	
	APPRAISER_FLAG      	VARCHAR2(1 BYTE),
	REVIEWER_FLAG 			  VARCHAR2(1 BYTE),
	APPRAISEE_RATING		  VARCHAR2(1 BYTE),
	APPRAISER_RATING		  VARCHAR2(1 BYTE),
	REVIEWER_RATING			  VARCHAR2(1 BYTE),
	MAX_VALUE				      VARCHAR2(3 BYTE),
	MIN_VALUE				      VARCHAR2(3 BYTE),
	NEXT_QUESTION_CODE		NUMBER(7,0) DEFAULT NULL,
	COMPANY_ID          	NUMBER(7,0),	
	BRANCH_ID           	NUMBER(7,0),
	CREATED_BY            NUMBER(7,0),
	CREATED_DATE          DATE DEFAULT SYSDATE,
	MODIFIED_BY		        NUMBER(7,0),
	MODIFIED_DATE		      DATE,
	CHECKED					      VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY				    NUMBER(7,0),
	APPROVED_DATE			    DATE DEFAULT SYSDATE,
	APPROVED				      VARCHAR2(1 BYTE) DEFAULT 'N',
	STATUS        			  CHAR(1 BYTE),
	CONSTRAINT FK_APL_QTN_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_QTN_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT PK_APL_QUESTION PRIMARY KEY (QUESTION_ID),
	CONSTRAINT FK_APL_QUESTION FOREIGN KEY (HEADING_ID) REFERENCES HR_APPRAISAL_HEADING(HEADING_ID),
	CONSTRAINT FK_APL_QTN_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES 	HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_QTN_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_QTN_EMPLOYEE_EMP_ID3 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)
);

-- CREATE QUERY FO APPRAISAL QUESTION OPTIONS
CREATE TABLE HR_APPRAISAL_QUESTION_OPTIONS
(
	OPTION_ID			        NUMBER(7,0) NOT NULL,	
	OPTION_CODE			      VARCHAR2(15 BYTE) NOT NULL,
	QUESTION_ID       	  NUMBER(7,0)                  NOT NULL,
	OPTION_EDESC          VARCHAR2(400 BYTE)      NOT NULL,
	OPTION_NDESC          VARCHAR2(800 BYTE)      DEFAULT NULL,   
	COMPANY_ID          	NUMBER(7,0),	
	BRANCH_ID           	NUMBER(7,0),
	CREATED_BY            NUMBER(7,0),
	CREATED_DATE          DATE DEFAULT SYSDATE,
	MODIFIED_BY		        NUMBER(7,0),
	MODIFIED_DATE		      DATE,
	CHECKED					      VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY				    NUMBER(7,0),
	APPROVED_DATE			    DATE DEFAULT SYSDATE,
	APPROVED				      VARCHAR2(1 BYTE) DEFAULT 'N',
	STATUS        			  CHAR(1 BYTE),
	CONSTRAINT FK_APL_QTN_OP_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_QTN_OP_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT PK_APL_QTN_OP PRIMARY KEY (OPTION_ID),
	CONSTRAINT FK_APL_QTN_OPT FOREIGN KEY(QUESTION_ID) REFERENCES HR_APPRAISAL_QUESTION(QUESTION_ID),
	CONSTRAINT FK_APL_QTN_OP_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES 	HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_QTN_OP_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_QTN_OP_EMPLOYEE_EMP_ID3 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)
);


CREATE TABLE HR_APPRAISAL_SETUP
(
	APPRAISAL_ID		  	    NUMBER(7,0)	NOT NULL,
	APPRAISAL_CODE        	VARCHAR2(15 BYTE) NOT NULL,
	APPRAISAL_EDESC       	VARCHAR2(400 BYTE) NOT NULL,
	APPRAISAL_NDESC       	VARCHAR2(800 BYTE) DEFAULT NULL, 
	APPRAISAL_TYPE_ID		    NUMBER(7,0),
	START_DATE				      DATE,
	END_DATE				        DATE,
	CURRENT_STAGE_CODE		  NUMBER(7,0),
	REMARKS					        VARCHAR2(200 BYTE),
	COMPANY_ID          	  NUMBER(7,0),	
	BRANCH_ID           	  NUMBER(7,0),
	CREATED_BY            	NUMBER(7,0),
	CREATED_DATE          	DATE DEFAULT SYSDATE,
	MODIFIED_BY		          NUMBER(7,0),
	MODIFIED_DATE		        DATE,
	CHECKED					        VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY				      NUMBER(7,0),
	APPROVED_DATE			      DATE DEFAULT SYSDATE,
	APPROVED				        VARCHAR2(1 BYTE) DEFAULT 'N',
	STATUS        			    CHAR(1 BYTE),
	CONSTRAINT FK_APL_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT PK_APL_SETUP PRIMARY KEY (APPRAISAL_ID),	
	CONSTRAINT FK_APL_SETUP1 FOREIGN KEY (CURRENT_STAGE_CODE) REFERENCES HR_APPRAISAL_STAGE(STAGE_ID),
	CONSTRAINT FK_APL_SETUP2 FOREIGN KEY (APPRAISAL_TYPE_ID) REFERENCES HR_APPRAISAL_TYPE(APPRAISAL_TYPE_ID),
  CONSTRAINT FK_APL_EMPLOYEE_EMP_ID FOREIGN KEY(CREATED_BY) REFERENCES 	HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_EMPLOYEE_EMP_ID2 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_EMPLOYEE_EMP_ID3 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)
);

-- CREATE QUERY FOR APPRAISAL ASSIGN
CREATE TABLE HR_APPRAISAL_ASSIGN
(
	APPRAISAL_ID		  NUMBER(7,0) NOT NULL,
	EMPLOYEE_ID      	NUMBER(7,0)  NOT NULL,
	APPRAISER_ID      NUMBER(7,0),
	REVIEWER_ID			  NUMBER(7,0),
	REMARKS				    VARCHAR2(100 BYTE) DEFAULT NULL, 
	COMPANY_ID        NUMBER(7,0),	
	BRANCH_ID         NUMBER(7,0),
	CREATED_BY        NUMBER(7,0),
	CREATED_DATE      DATE DEFAULT SYSDATE,
	MODIFIED_BY		    NUMBER(7,0),
	MODIFIED_DATE		  DATE,
	CHECKED					  VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY				NUMBER(7,0),
	APPROVED_DATE			DATE DEFAULT SYSDATE,
	APPROVED				  VARCHAR2(1 BYTE) DEFAULT 'N',
	STATUS        		CHAR(1 BYTE),
        CONSTRAINT PK_APL_ASGN PRIMARY KEY(APPRAISAL_ID,EMPLOYEE_ID),
	CONSTRAINT FK_APL_ASGN_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_ASGN_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT FK_APL_ASGN_APPRAISAL_APL_ID FOREIGN KEY(APPRAISAL_ID) REFERENCES HR_APPRAISAL_SETUP(APPRAISAL_ID),
	CONSTRAINT FK_APL_ASGN_EMPLOYEE_EMP_ID FOREIGN KEY(EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ASGN_EMPLOYEE_EMP_ID2 FOREIGN KEY(APPRAISER_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ASGN_EMPLOYEE_EMP_ID3 FOREIGN KEY(REVIEWER_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ASGN_EMPLOYEE_EMP_ID4 FOREIGN KEY(CREATED_BY) REFERENCES 	HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ASGN_EMPLOYEE_EMP_ID5 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ASGN_EMPLOYEE_EMP_ID6 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)
);


CREATE TABLE HR_APPRAISAL_ANSWER
(
	ANSWER_ID           NUMBER(7,0) NOT NULL,
  APPRAISAL_ID		    NUMBER(7,0) NOT NULL,
	QUESTION_ID       	NUMBER(7,0)  NOT NULL,
	EMPLOYEE_ID        	NUMBER(7,0) NOT NULL,
	USER_ID				      NUMBER(7,0) NOT NULL,
	ANSWER				      VARCHAR2(2000 BYTE) 		NOT NULL,   
	RATING				      NUMBER(5,2),
	STAGE_ID			      NUMBER(7,0),
	REMARKS				      VARCHAR2(100 BYTE) DEFAULT NULL,
	STATUS				      VARCHAR2(2 BYTE),  
	COMPANY_ID          NUMBER(7,0),	
	BRANCH_ID           NUMBER(7,0),
	CREATED_BY          NUMBER(7,0),
	CREATED_DATE        DATE DEFAULT SYSDATE,
	MODIFIED_BY		      NUMBER(7,0),
	MODIFIED_DATE	      DATE,
	CHECKED					    VARCHAR2(1 BYTE) DEFAULT 'N',
	APPROVED_BY				  NUMBER(7,0),
	APPROVED_DATE			  DATE DEFAULT SYSDATE,
	APPROVED				    VARCHAR2(1 BYTE) DEFAULT 'N',
        CONSTRAINT PK_APL_ANS PRIMARY KEY(ANSWER_ID),
	CONSTRAINT FK_APL_ANS_COMPANY_COM_ID FOREIGN KEY(COMPANY_ID) REFERENCES HR_COMPANY(COMPANY_ID),
	CONSTRAINT FK_APL_ANS_BRANCH_BNC_ID FOREIGN KEY(BRANCH_ID) REFERENCES HR_BRANCHES(BRANCH_ID),
	CONSTRAINT FK_APL_ANS_APPRAISAL_APL_ID FOREIGN KEY(APPRAISAL_ID) REFERENCES HR_APPRAISAL_SETUP(APPRAISAL_ID),
	CONSTRAINT FK_APL_ANS_QUESTION_QUT_ID FOREIGN KEY(QUESTION_ID) REFERENCES HR_APPRAISAL_QUESTION(QUESTION_ID),
	CONSTRAINT HR_APL_ANS_STAGE_STG_ID FOREIGN KEY(STAGE_ID) REFERENCES HR_APPRAISAL_STAGE(STAGE_ID),
	CONSTRAINT FK_APLL_ANS_EMPLOYEE_EMP_ID FOREIGN KEY(EMPLOYEE_ID) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ANS_EMPLOYEE_EMP_ID2 FOREIGN KEY(USER_ID) REFERENCES HR_USERS(USER_ID),
	CONSTRAINT FK_APL_ANS_EMPLOYEE_EMP_ID3 FOREIGN KEY(CREATED_BY) REFERENCES 	HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ANS_EMPLOYEE_EMP_ID4 FOREIGN KEY(MODIFIED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID),
	CONSTRAINT FK_APL_ANS_EMPLOYEE_EMP_ID5 FOREIGN KEY(APPROVED_BY) REFERENCES HR_EMPLOYEES(EMPLOYEE_ID)
);

ALTER TABLE HR_APPRAISAL_TYPE
ADD (REMARKS VARCHAR2(255 BYTE));

ALTER TABLE HR_APPRAISAL_STAGE
ADD (REMARKS VARCHAR2(255 BYTE));

ALTER TABLE HR_APPRAISAL_HEADING
ADD (REMARKS VARCHAR2(255 BYTE));

ALTER TABLE HR_APPRAISAL_QUESTION
ADD (REMARKS VARCHAR2(255 BYTE));


ALTER TABLE HR_APPRAISAL_QUESTION DROP COLUMN ANSWER_TYPE ;

ALTER TABLE HR_APPRAISAL_QUESTION ADD (ANSWER_TYPE VARCHAR2(30 BYTE) NOT NULL CHECK(ANSWER_TYPE IN ('TEXT','TEXTAREA','NUMBER','PERCENTAGE','CHECKBOX','RADIO','SELECT')));

ALTER TABLE HR_APPRAISAL_QUESTION
MODIFY MIN_VALUE NUMBER(7,0);

ALTER TABLE HR_APPRAISAL_QUESTION
MODIFY MAX_VALUE NUMBER(7,0);

