SELECT
  AR.ADVANCE_REQUEST_ID AS ADVANCE_REQUEST_ID,
  INITCAP(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE,
  INITCAP(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE_AD,
  BS_DATE(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE_BS,
  INITCAP(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE,
  INITCAP(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE_AD,
  BS_DATE(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE_BS,
  INITCAP(TO_CHAR(AR.RECOMMENDED_DATE,'DD-MON-YYYY') ) AS RECOMMENDED_DATE,
  INITCAP(TO_CHAR(AR.APPROVED_DATE,'DD-MON-YYYY') ) AS APPROVED_DATE,
  AR.REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  AR.REASON AS REASON,
  AR.REASON AS REASON,
  AR.STATUS AS STATUS,
  LEAVE_STATUS_DESC(TRIM(AR.STATUS) ) AS STATUS_DETAIL,
  AR.RECOMMENDED_REMARKS AS RECOMMENDED_REMARKS,
  AR.APPROVED_REMARKS AS APPROVED_REMARKS,
  AR.DEDUCTION_TYPE AS DEDUCTION_TYPE,
  AR.DEDUCTION_RATE AS DEDUCTION_RATE,
  AR.DEDUCTION_IN AS DEDUCTION_IN,
  AR.DEDUCTION_TYPE AS DEDUCTION_TYPE,
  (
    CASE
      WHEN AR.DEDUCTION_TYPE = 'M' THEN 'MONTH'
      ELSE 'SALARY'
    END
  ) AS DEDUCTION_TYPE_NAME,
  A.ADVANCE_CODE AS ADVANCE_CODE,
  INITCAP(A.ADVANCE_ENAME) AS ADVANCE_ENAME,
  INITCAP(E.FULL_NAME) AS FULL_NAME,
  INITCAP(E2.FULL_NAME) AS RECOMMENDED_BY_NAME,
  INITCAP(E3.FULL_NAME) AS APPROVED_BY_NAME,
  RA.RECOMMEND_BY AS RECOMMENDER_ID,
  RA.APPROVED_BY AS APPROVER_ID,
  INITCAP(RECM.FULL_NAME) AS RECOMMENDER_NAME,
  INITCAP(APRV.FULL_NAME) AS APPROVER_NAME,
  INITCAP(RECM.FULL_NAME) AS OV_RECOMMENDER_NAME,
  INITCAP(APRV.FULL_NAME) AS OV_APPROVER_NAME
FROM
  HRIS_EMPLOYEE_ADVANCE_REQUEST AR
  INNER JOIN HRIS_ADVANCE_MASTER_SETUP A ON A.ADVANCE_ID = AR.ADVANCE_ID
  LEFT JOIN HRIS_EMPLOYEES E ON AR.EMPLOYEE_ID = E.EMPLOYEE_ID
  LEFT JOIN HRIS_EMPLOYEES E2 ON E2.EMPLOYEE_ID = AR.RECOMMENDED_BY
  LEFT JOIN HRIS_EMPLOYEES E3 ON E3.EMPLOYEE_ID = AR.APPROVED_BY
  LEFT JOIN HRIS_RECOMMENDER_APPROVER RA ON RA.EMPLOYEE_ID = AR.EMPLOYEE_ID
  LEFT JOIN HRIS_EMPLOYEES RECM ON RECM.EMPLOYEE_ID = RA.RECOMMEND_BY
  LEFT JOIN HRIS_EMPLOYEES APRV ON APRV.EMPLOYEE_ID = RA.APPROVED_BY
  LEFT JOIN HRIS_EMPLOYEES OVR ON OVR.EMPLOYEE_ID = AR.OVERRIDE_RECOMMENDER_ID
  LEFT JOIN HRIS_EMPLOYEES OVA ON OVA.EMPLOYEE_ID = AR.OVERRIDE_APPROVER_ID
  LEFT JOIN HRIS_EMPLOYEES U ON(U.EMPLOYEE_ID   = RA.RECOMMEND_BY OR U.EMPLOYEE_ID   =RA.APPROVED_BY)
WHERE
U.EMPLOYEE_ID= 1000376 AND AR.STATUS IN ('RQ','RC')
ORDER BY AR.REQUESTED_DATE DESC










SELECT
  AR.ADVANCE_REQUEST_ID AS ADVANCE_REQUEST_ID,
  INITCAP(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE,
  INITCAP(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE_AD,
  BS_DATE(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE_BS,
  INITCAP(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE,
  INITCAP(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE_AD,
  BS_DATE(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE_BS,
  INITCAP(TO_CHAR(AR.RECOMMENDED_DATE,'DD-MON-YYYY') ) AS RECOMMENDED_DATE,
  INITCAP(TO_CHAR(AR.APPROVED_DATE,'DD-MON-YYYY') ) AS APPROVED_DATE,
  AR.REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  AR.REASON AS REASON,
  AR.REASON AS REASON,
  AR.STATUS AS STATUS,
  LEAVE_STATUS_DESC(TRIM(AR.STATUS) ) AS STATUS_DETAIL,
  AR.RECOMMENDED_REMARKS AS RECOMMENDED_REMARKS,
  AR.APPROVED_REMARKS AS APPROVED_REMARKS,
  AR.DEDUCTION_TYPE AS DEDUCTION_TYPE,
  AR.DEDUCTION_RATE AS DEDUCTION_RATE,
  AR.DEDUCTION_IN AS DEDUCTION_IN,
  AR.DEDUCTION_TYPE AS DEDUCTION_TYPE,
  (
    CASE
      WHEN AR.DEDUCTION_TYPE = 'M' THEN 'MONTH'
      ELSE 'SALARY'
    END
  ) AS DEDUCTION_TYPE_NAME,
  A.ADVANCE_CODE AS ADVANCE_CODE,
  INITCAP(A.ADVANCE_ENAME) AS ADVANCE_ENAME,
  INITCAP(E.FULL_NAME) AS FULL_NAME,
  INITCAP(E2.FULL_NAME) AS RECOMMENDED_BY_NAME,
  INITCAP(E3.FULL_NAME) AS APPROVED_BY_NAME,
  RA.RECOMMEND_BY AS RECOMMENDER_ID,
  RA.APPROVED_BY AS APPROVER_ID,
  INITCAP(RECM.FULL_NAME) AS RECOMMENDER_NAME,
  INITCAP(APRV.FULL_NAME) AS APPROVER_NAME,
  INITCAP(OVR.FULL_NAME) AS OV_RECOMMENDER_NAME,
  INITCAP(OVA.FULL_NAME) AS OV_APPROVER_NAME
FROM
  HRIS_EMPLOYEE_ADVANCE_REQUEST AR
  INNER JOIN HRIS_ADVANCE_MASTER_SETUP A ON A.ADVANCE_ID = AR.ADVANCE_ID
  LEFT JOIN HRIS_EMPLOYEES E ON AR.EMPLOYEE_ID = E.EMPLOYEE_ID
  LEFT JOIN HRIS_EMPLOYEES E2 ON E2.EMPLOYEE_ID = AR.RECOMMENDED_BY
  LEFT JOIN HRIS_EMPLOYEES E3 ON E3.EMPLOYEE_ID = AR.APPROVED_BY
  LEFT JOIN HRIS_RECOMMENDER_APPROVER RA ON RA.EMPLOYEE_ID = AR.EMPLOYEE_ID
  LEFT JOIN HRIS_EMPLOYEES RECM ON RECM.EMPLOYEE_ID = RA.RECOMMEND_BY
  LEFT JOIN HRIS_EMPLOYEES APRV ON APRV.EMPLOYEE_ID = RA.APPROVED_BY
  LEFT JOIN HRIS_EMPLOYEES OVR ON OVR.EMPLOYEE_ID = AR.OVERRIDE_RECOMMENDER_ID
  LEFT JOIN HRIS_EMPLOYEES OVA ON OVA.EMPLOYEE_ID = AR.OVERRIDE_APPROVER_ID
  LEFT JOIN HRIS_EMPLOYEES U ON(U.EMPLOYEE_ID=RA.RECOMMEND_BY OR U.EMPLOYEE_ID=RA.APPROVED_BY)
WHERE
((U.EMPLOYEE_ID= 1000376 AND OVERRIDE_RECOMMENDER_ID IS NULL AND OVERRIDE_APPROVER_ID IS NULL) OR (OVERRIDE_RECOMMENDER_ID=1000376 OR OVERRIDE_APPROVER_ID=1000376 )) AND AR.STATUS IN ('RQ','RC')
ORDER BY AR.REQUESTED_DATE DESC



create or replace FUNCTION REC_APP_ROLE_WITH_OV(
    P_EMPLOYEE_ID HRIS_EMPLOYEES.EMPLOYEE_ID%TYPE,
    P_RECOMMENDER_ID HRIS_RECOMMENDER_APPROVER.RECOMMEND_BY%TYPE,
    P_APPROVER_ID HRIS_RECOMMENDER_APPROVER.APPROVED_BY%TYPE,
    P_OV_RECOMMENDER_ID HRIS_RECOMMENDER_APPROVER.RECOMMEND_BY%TYPE,
    P_OV_APPROVER_ID HRIS_RECOMMENDER_APPROVER.APPROVED_BY%TYPE
    )
  RETURN VARCHAR2
IS
  V_ROLE_TYPE NUMBER;
BEGIN
IF(P_OV_RECOMMENDER_ID  IS NOT NULL OR P_OV_APPROVER_ID  IS NOT NULL) THEN

IF(P_EMPLOYEE_ID = P_OV_RECOMMENDER_ID AND P_EMPLOYEE_ID = P_OV_APPROVER_ID)THEN
    V_ROLE_TYPE   :=4;
  ELSE
    IF(P_EMPLOYEE_ID = P_OV_RECOMMENDER_ID) THEN
      V_ROLE_TYPE   :=2;
    END IF;
    IF(P_EMPLOYEE_ID= P_OV_APPROVER_ID) THEN
      V_ROLE_TYPE  :=3;
    END IF;
  END IF;
ELSE
  IF(P_EMPLOYEE_ID = P_RECOMMENDER_ID AND P_EMPLOYEE_ID = P_APPROVER_ID)THEN
    V_ROLE_TYPE   :=4;
  ELSE
    IF(P_EMPLOYEE_ID = P_RECOMMENDER_ID) THEN
      V_ROLE_TYPE   :=2;
    END IF;
    IF(P_EMPLOYEE_ID= P_APPROVER_ID) THEN
      V_ROLE_TYPE  :=3;
    END IF;
  END IF;
  END IF;
RETURN V_ROLE_TYPE;
END;


SELECT
  AR.ADVANCE_REQUEST_ID AS ADVANCE_REQUEST_ID,
  INITCAP(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE,
  INITCAP(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE_AD,
  BS_DATE(TO_CHAR(AR.REQUESTED_DATE,'DD-MON-YYYY') ) AS REQUESTED_DATE_BS,
  INITCAP(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE,
  INITCAP(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE_AD,
  BS_DATE(TO_CHAR(AR.DATE_OF_ADVANCE,'DD-MON-YYYY') ) AS DATE_OF_ADVANCE_BS,
  INITCAP(TO_CHAR(AR.RECOMMENDED_DATE,'DD-MON-YYYY') ) AS RECOMMENDED_DATE,
  INITCAP(TO_CHAR(AR.APPROVED_DATE,'DD-MON-YYYY') ) AS APPROVED_DATE,
  AR.REQUESTED_AMOUNT AS REQUESTED_AMOUNT,
  AR.REASON AS REASON,
  AR.REASON AS REASON,
  AR.STATUS AS STATUS,
  LEAVE_STATUS_DESC(TRIM(AR.STATUS) ) AS STATUS_DETAIL,
  AR.RECOMMENDED_REMARKS AS RECOMMENDED_REMARKS,
  AR.APPROVED_REMARKS AS APPROVED_REMARKS,
  AR.DEDUCTION_TYPE AS DEDUCTION_TYPE,
  AR.DEDUCTION_RATE AS DEDUCTION_RATE,
  AR.DEDUCTION_IN AS DEDUCTION_IN,
  AR.DEDUCTION_TYPE AS DEDUCTION_TYPE,
  (
    CASE
      WHEN AR.DEDUCTION_TYPE = 'M' THEN 'MONTH'
      ELSE 'SALARY'
    END
  ) AS DEDUCTION_TYPE_NAME,
  A.ADVANCE_CODE AS ADVANCE_CODE,
  INITCAP(A.ADVANCE_ENAME) AS ADVANCE_ENAME,
  INITCAP(E.FULL_NAME) AS FULL_NAME,
  INITCAP(E2.FULL_NAME) AS RECOMMENDED_BY_NAME,
  INITCAP(E3.FULL_NAME) AS APPROVED_BY_NAME,
  (
    CASE
      WHEN AR.OVERRIDE_RECOMMENDER_ID IS NOT NULL THEN AR.OVERRIDE_RECOMMENDER_ID
      ELSE RA.RECOMMEND_BY
    END
  ) AS RECOMMENDER_ID,
  (
    CASE
      WHEN AR.OVERRIDE_APPROVER_ID IS NOT NULL THEN AR.OVERRIDE_APPROVER_ID
      ELSE RA.APPROVED_BY
    END
  ) AS APPROVER_ID,
  INITCAP(
    CASE
      WHEN
        AR.OVERRIDE_RECOMMENDER_ID
      IS NOT NULL THEN
        OVR.FULL_NAME
      ELSE
        RECM.FULL_NAME
    END
  ) AS RECOMMENDER_NAME,
  INITCAP(
    CASE
      WHEN
        AR.OVERRIDE_APPROVER_ID
      IS NOT NULL THEN
        OVA.FULL_NAME
      ELSE
        APRV.FULL_NAME
    END
  ) AS APPROVER_NAME,
  LEAVE_STATUS_DESC(AR.STATUS) AS STATUS_DETAIL,
  AR.OVERRIDE_RECOMMENDER_ID AS OVERRIDE_RECOMMENDER_ID,
  AR.OVERRIDE_APPROVER_ID AS OVERRIDE_APPROVER_ID,
  REC_APP_ROLE(
    U.EMPLOYEE_ID,
    (
      CASE
        WHEN AR.OVERRIDE_RECOMMENDER_ID IS NOT NULL THEN AR.OVERRIDE_RECOMMENDER_ID
        ELSE RA.RECOMMEND_BY
      END
    ),
    (
      CASE
        WHEN AR.OVERRIDE_APPROVER_ID IS NOT NULL THEN AR.OVERRIDE_APPROVER_ID
        ELSE RA.APPROVED_BY
      END
    )
  ) AS ROLE,
  REC_APP_ROLE_NAME(U.EMPLOYEE_ID,(
        CASE
          WHEN AR.OVERRIDE_RECOMMENDER_ID IS NOT NULL THEN AR.OVERRIDE_RECOMMENDER_ID
          ELSE RA.RECOMMEND_BY
        END
      ),
      (
      CASE
        WHEN AR.OVERRIDE_APPROVER_ID IS NOT NULL THEN AR.OVERRIDE_APPROVER_ID
        ELSE RA.APPROVED_BY
      END
    )) AS YOUR_ROLE
FROM
  HRIS_EMPLOYEE_ADVANCE_REQUEST AR
  INNER JOIN HRIS_ADVANCE_MASTER_SETUP A ON A.ADVANCE_ID = AR.ADVANCE_ID
  LEFT JOIN HRIS_EMPLOYEES E ON AR.EMPLOYEE_ID = E.EMPLOYEE_ID
  LEFT JOIN HRIS_EMPLOYEES E2 ON E2.EMPLOYEE_ID = AR.RECOMMENDED_BY
  LEFT JOIN HRIS_EMPLOYEES E3 ON E3.EMPLOYEE_ID = AR.APPROVED_BY
  LEFT JOIN HRIS_RECOMMENDER_APPROVER RA ON RA.EMPLOYEE_ID = AR.EMPLOYEE_ID
  LEFT JOIN HRIS_EMPLOYEES RECM ON RECM.EMPLOYEE_ID = RA.RECOMMEND_BY
  LEFT JOIN HRIS_EMPLOYEES APRV ON APRV.EMPLOYEE_ID = RA.APPROVED_BY
  LEFT JOIN HRIS_EMPLOYEES OVR ON OVR.EMPLOYEE_ID = AR.OVERRIDE_RECOMMENDER_ID
  LEFT JOIN HRIS_EMPLOYEES OVA ON OVA.EMPLOYEE_ID = AR.OVERRIDE_APPROVER_ID
  LEFT JOIN HRIS_EMPLOYEES U ON (
      U.EMPLOYEE_ID = (
        CASE
          WHEN AR.OVERRIDE_RECOMMENDER_ID IS NOT NULL THEN AR.OVERRIDE_RECOMMENDER_ID
          ELSE RA.RECOMMEND_BY
        END
      )
    OR
      U.EMPLOYEE_ID = (
        CASE
          WHEN AR.OVERRIDE_APPROVER_ID IS NOT NULL THEN AR.OVERRIDE_APPROVER_ID
          ELSE RA.APPROVED_BY
        END
      )
  )
WHERE
    U.EMPLOYEE_ID = 1000376
  AND (
    (
        U.EMPLOYEE_ID=(CASE WHEN OVERRIDE_RECOMMENDER_ID IS NOT NULL 
        THEN OVERRIDE_RECOMMENDER_ID ELSE
        RA.RECOMMEND_BY END)
      AND
        AR.STATUS = 'RQ'
    ) OR (
        U.EMPLOYEE_ID=(CASE WHEN OVERRIDE_APPROVER_ID IS NOT NULL 
        THEN OVERRIDE_APPROVER_ID ELSE
        RA.APPROVED_BY END)
      AND
        AR.STATUS = 'RC'
    )
  )
ORDER BY AR.REQUESTED_DATE DESC
